.related-videos-container {
  background: rgba(#221e1a, .85);
  width: auto;
  height: 184px;
  position: relative;
  a.previous, a.next {
    position: absolute;
    width: 70px;
    height: 100%;
    top: 0;
    .glyphicon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }
  .previous {
    left: 0;
  }
  .next {
    right: 0;
  }
}
.related-videos-mask {
  width: calc(100% - 140px);
  height: 100%;
  overflow: hidden;
  position: relative;
  left: 70px;
}
.related-videos {
  width: auto;
  height: 100%;
  list-style: none;
  padding: 0;
  margin: 0;
  position: relative;
  li {
    position: absolute;
    padding: 0;
    margin: 25px 0;
    @for $i from 1 through 30 {
      &:nth-child(#{$i}) {
        left: 170px * ($i - 1);
      }
    }
    a {
      display: block;
      width: 100%;
      height: 100%;
      background: rgba(#dddbcb, .2);
      &:hover {
        background: rgba(#d2d1c2, 1);
        .info {
          color: #4c4c47;
        }
      }
    }
    .img {
      background:center center no-repeat;
      background-size: cover;
      width: 100%;
      height: 96px;
    }
    .info {
      color: #b2b2a6;
      padding: 5px;
      font-size: 11px;
      text-align: center;
      width: 150px;
      @include text-ellipsis;
    }
  }
}
.archive {
  position: relative;
  width: 100%;
  height: 100%;
  .archive-videos-container {
    position: relative;
    width: 100%;
    height: 184px * 2;
    background: transparent;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    .related-videos-container {
      $width: 1000px;
      top: 50%;
      left: 50%;
      height: 100%;
      width: $width;
      transform: translate(-50%, -50%);
      background: none;
      li {
        left: 0;
        top: 0;
        transition: all .8s ease-in;
        //transition-timing-function: cubic-bezier(0.23,1,0.32,1);
        //transition-timing-function: cubic-bezier(0.55,0.055,0.675,0.19);
        transition-timing-function: cubic-bezier(0.77,0,0.175,1);
        a {
          .info {
            background: rgba(#93938a, .6);
            color: #bdbcaf;
            -webkit-font-smoothing: subpixel-antialiased;
          }
          &:hover {
            .info {
              background: rgba(#d2d1c2, 1);
              color: #585852;
            }
          }
        }
      }
      @for $page from 1 through 3 {
        &.page#{$page} {
          li {
            $gap: 25px;
            $horizontal-gap: 0;
            $vertical-gap: $gap;
            $left: 150px;
            $items: 10;
            $columns: 2;
            $items-per-column: floor($items / $columns);

            @include my-translate($width, $vertical-gap);
            -webkit-font-smoothing: subpixel-antialiased;
            $delay: 0;

            @for $i from (($page - 2)*$items)+1 through (($page - 2)*$items)+$items {
              &:nth-child(#{$i}) {
                @include my-translate(-$width, $vertical-gap);
                transition-delay: $delay;
              }
              $horizontal-gap: $horizontal-gap + $left + $gap;
              $delay: $delay + 20ms;
              @if $i % $items-per-column == 0 {
                $vertical-gap: $vertical-gap + $left;
                $delay: 0;
              }
            }
            $horizontal-gap: 0;
            $vertical-gap: 18px;
            $delay: 100ms;
            @for $i from ($page - 1)*$items+1 through ($page - 1)*$items+1+$items {
              &:nth-child(#{$i}) {
                @include my-translate($horizontal-gap, $vertical-gap);
                transition-delay: $delay;
              }
              $delay: $delay - 20ms;
              $horizontal-gap: $horizontal-gap + $left + $gap;
              @if $i % $items-per-column == 0 {
                $horizontal-gap: 0;
                $delay: 100ms;
                $vertical-gap: $vertical-gap + $left;
              }
            }
            $horizontal-gap: $width;
            $vertical-gap: $gap;
            $delay: 0;
            @for $i from $page*$items+1 through $page*$items+$items {
              &:nth-child(#{$i}) {
                @include my-translate($width, $vertical-gap);
                transition-delay: $delay;
              }
              $delay: $delay + 20ms;
              $horizontal-gap: $horizontal-gap + $left + $gap;
              @if $i % $items-per-column == 0 {
                $delay: 0;
                $vertical-gap: $vertical-gap + $left;
              }
            }
          }
        }
      }
    }
  }
}
